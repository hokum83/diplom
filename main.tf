terraform {
  required_providers {
    yandex = {
      source = "yandex-cloud/yandex"
    }
  }
  required_version = ">= 0.13"
}

provider "yandex" {
  cloud_id                 = var.cloud_id
  folder_id                = var.folder_id
  zone                     = var.zone1
  service_account_key_file = var.key_file
}

module "vpc" {
  source    = "./modules/vpc"
  folder_id = var.folder_id
}

module "web" {
  source        = "./modules/web"
  image_id      = var.image_id
  folder_id     = var.folder_id
  network_1_id  = module.vpc.network_1_id
  subnet_1_id   = module.vpc.subnet_1_id
  subnet_2_id   = module.vpc.subnet_2_id
  private_sg_id = module.vpc.private_sg_id
  public_sg_id  = module.vpc.public_sg_id
  depends_on    = [module.vpc]
}

module "zbx" {
  source        = "./modules/zbx"
  image_id      = var.image_id
  folder_id     = var.folder_id
  network_1_id  = module.vpc.network_1_id
  subnet_1_id   = module.vpc.subnet_1_id
  subnet_2_id   = module.vpc.subnet_2_id
  zbx_db_user   = var.zbx_db_user
  zbx_db_name   = var.zbx_db_name
  private_sg_id = module.vpc.private_sg_id
  public_sg_id  = module.vpc.public_sg_id
  depends_on    = [module.vpc]
}

module "elk" {
  source        = "./modules/elk"
  image_id      = var.image_id
  folder_id     = var.folder_id
  network_1_id  = module.vpc.network_1_id
  subnet_1_id   = module.vpc.subnet_1_id
  subnet_2_id   = module.vpc.subnet_2_id
  private_sg_id = module.vpc.private_sg_id
  public_sg_id  = module.vpc.public_sg_id
  depends_on    = [module.vpc]
}

module "jump" {
  source       = "./modules/jump"
  image_id     = var.image_id
  folder_id    = var.folder_id
  network_1_id = module.vpc.network_1_id
  subnet_1_id  = module.vpc.subnet_1_id
  subnet_2_id  = module.vpc.subnet_2_id
  public_sg_id = module.vpc.public_sg_id
  depends_on   = [module.vpc, module.web, module.zbx, module.elk]
}

module "snap" {
  source = "./modules/snap"
  disk_ids = flatten([
    module.elk.elk_disk_ids,
    module.zbx.zbx_disk_ids,
    module.jump.jump_disk_id,
    module.web.web_disk_ids
  ])
  depends_on = [module.jump]
}

resource "local_file" "tf-ansible-vars" {
  content  = <<-DOC
    # Ansible vars_file containing variable values from Terraform.
    # Generated by Terraform mgmt configuration.

    zabbix_server_dbuser: ${var.zbx_db_user}
    zabbix_server_dbname: ${var.zbx_db_name}
    zabbix_server_dbpassword: ${module.zbx.zbx_db_password}
    zabbix_server_dbhost: c-${module.zbx.pgsql_cluster_id}.rw.mdb.yandexcloud.net
    zabbix_agent_server: ${module.zbx.zbx_server_fqdn}
    zabbix_agent_serveractive: ${module.zbx.zbx_server_fqdn}
    zabbix_server_hostname: ${module.zbx.zbx_server_fqdn}
    zabbix_api_server_host: ${module.zbx.zbx_fe_external_ip}
    elk_elasticsearch_fqdn: ${module.elk.elk_elasticsearch_fqdn}
    elk_kibana_fqdn: ${module.elk.elk_kibana_fqdn}
    DOC
  filename = "./tf_ansible_vars_file.yml"
}

output "site_external_address" {
  depends_on = [module.snap]
  value      = "http://${module.web.alb_external_ip}/"
}

output "zabbix_external_address" {
  depends_on = [module.snap]
  value      = "http://${module.zbx.zbx_fe_external_ip}/zabbix/"
}

output "kibana_external_address" {
  depends_on = [module.snap]
  value      = "http://${module.elk.elk_kibana_external_ip}:5601/"
}
